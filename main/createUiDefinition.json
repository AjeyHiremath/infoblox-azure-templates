{
	"handler": "Microsoft.Compute.MultiVm",
	"version": "0.0.1-preview",
	"parameters": {
		"basics": [
		{
			"name": "vmName",
			"type": "Microsoft.Common.TextBox",
			"label": "NIOS VM name",
			"toolTip": "The name of the new NIOS vm.",
			"constraints": {
				"required": true,
				"regex": "^[a-z][a-z0-9]{3,24}$",
        		"validationMessage": "NIOS Vm name must be between 3 and 24 characters long, must start from lowercase letter and can contain only numbers and lowercase letters."
    		}
	    },
		{
			"name": "SSHCredntials",
			"type": "Microsoft.Compute.CredentialsCombo",
			"label": {
				"password": "Password",
				"confirmPassword": "Confirm password"
			},
			"toolTip": {
				"password": ""
			},
			"constraints": {
				"required": true
			},
			"options": {
				"hideConfirmation": false
			},
			"osPlatform": "Windows",
			"visible": true
		}],
		"steps": [{
			"name": "vmSettings",
			"label": "VM Settings",
			"bladeTitle": "NIOS VM settings",
			"subLabel": {
				"preValidation": "Configure VM Settings",
				"postValidation": "Done"
			},
			"elements": [
				{
					"name": "niosModel",
					"type": "Microsoft.Common.DropDown",
					"label": "NIOS model",
					"defaultValue": "TE-1420 debug model (Standard DS2)",
					"toolTip": "",
					"constraints": {
						"allowedValues": [
							{
								"label": "TE-1420 debug model (Standard DS2)",
								"value": "vnios-te-1420-test-preview"
							},
							{
								"label": "TE-820 (Standard_DS2)",
								"value": "te-820"
							},
							{
								"label": "TE-1420 (Standard_DS3)",
								"value": "te-1420"
							},
							{
								"label": "TE-2220 (Standard_DS3)",
								"value": "te-2220"
							},
							{
								"label": "CP-V800 (Standard_DS2)",
								"value": "cp-v800"
							},
							{
								"label": "CP-V1400 (Standard_DS3)",
								"value": "cp-v1400"
							},
							{
								"label": "CP-V2200 (Standard_DS3)",
								"value": "cp-v2200"
							}
						]
					},
					"visible": true
				},
				{
					"name": "storageAccount",
					"type": "Microsoft.Storage.StorageAccountSelector",
					"label": "Storage account",
					"toolTip": "Storage account VM Disk",
					"defaultValue": {
						"type": "Premium_LRS"
					},
					"constraints": {
						"allowedTypes": ["Premium_LRS"]
					},
					"options": {
						"hideExisting": false
					},
					"visible": true
				},
				{
					"name": "storageAccountForLogs",
					"type": "Microsoft.Storage.StorageAccountSelector",
					"label": "Storage account for BootDiagnostics.",
					"toolTip": "Storage account for BootDiagnostics. Must be not preium.",
					"defaultValue": {
						"type": "Standard_LRS"
					},
					"constraints": {
						"allowedTypes": ["Standard_LRS"]
					},
					"options": {
						"hideExisting": false
					},
					"visible": true
				},
				{
					"name": "niosNetwork",
					"type": "Microsoft.Network.VirtualNetworkCombo",
					"label": {
						"virtualNetwork": "Virtual network",
						"subnets": "Subnets"
					},
					"toolTip": {
						"virtualNetwork": "",
						"subnets": ""
					},
					"defaultValue": {
						"name": "vnet01",
						"addressPrefixSize": "/16"
					},
					"constraints": {
						"minAddressPrefixSize": "/28"
					},
					"options": {
						"hideExisting": false
					},
					"subnets": {
						"subnetLan1": {
							"label": "Subnet for LAN1 port",
							"defaultValue": {
								"name": "subnet1",
								"addressPrefixSize": "/24"
							},
							"constraints": {
								"minAddressPrefixSize": "/30",
								"minAddressCount": 1
							}
						},
						"subnetMgmt": {
							"label": "Subnet for MGMT port",
							"defaultValue": {
								"name": "subnet2",
								"addressPrefixSize": "/24"
							},
							"constraints": {
								"minAddressPrefixSize": "/30",
								"minAddressCount": 1
							}
						}
					},
					"visible": true
				},
				{
					"name": "dnsAndPublicIP",
					"type": "Microsoft.Network.PublicIpAddressCombo",
					"label": {
						"publicIpAddress": "Public IP address",
						"domainNameLabel": "Domain name label"
					},
					"toolTip": {
						"publicIpAddress": "",
						"domainNameLabel": ""
					},
					"defaultValue": {
						"publicIpAddressName": ""
					},
					"constraints": {
						"required": {
							"domainNameLabel": true
						}
					},
					"options": {
						"hideNone": false,
						"hideDomainNameLabel": false,
						"hideExisting": false
					},
					"visible": true
				}
			]
		}],
		"outputs": {
			"vmName": "[basics('vmName')]",
			"niosModel": "[steps('vmSettings').niosModel]",

			"adminPassword": "[basics('SSHCredntials').password]",
			"sshPublicKey": "[basics('SSHCredntials').sshPublicKey]",
			"authenticationType": "[basics('SSHCredntials').authenticationType]",

			"virtualNetworkName": "[steps('vmSettings').niosNetwork.name]",
			"virtualNetworkExistingRGName": "[steps('vmSettings').niosNetwork.resourceGroup]",
			"virtualNetworkAddressPrefix": "[steps('vmSettings').niosNetwork.addressPrefix]",
			"vnetNewOrExisting": "[steps('vmSettings').niosNetwork.newOrExisting]",

			"Subnet1Prefix": "[steps('vmSettings').niosNetwork.subnets.subnetLan1.addressPrefix]",
			"Subnet1Name": "[steps('vmSettings').niosNetwork.subnets.subnetLan1.name]",
			"subnet1StartAddress": "[steps('vmSettings').niosNetwork.subnets.subnetLan1.startAddress]",

			"Subnet2Prefix": "[steps('vmSettings').niosNetwork.subnets.subnetMgmt.addressPrefix]",
			"Subnet2Name": "[steps('vmSettings').niosNetwork.subnets.subnetMgmt.name]",
			"subnet2StartAddress": "[steps('vmSettings').niosNetwork.subnets.subnetMgmt.startAddress]",
			
			"newStorageAccountName": "[steps('vmSettings').storageAccount.name]",
			"storageAccountType": "[steps('vmSettings').storageAccount.type]",
			"storageAccountNewOrExisting": "[steps('vmSettings').storageAccount.newOrExisting]",
			"storageAccountExistingRG": "[steps('vmSettings').storageAccount.resourceGroup]",

			"newStorageAccountForLogsName": "[steps('vmSettings').storageAccountForLogs.name]",
			"storageAccountForLogsType": "[steps('vmSettings').storageAccountForLogs.type]",
			"storageAccountForLogsNewOrExisting": "[steps('vmSettings').storageAccountForLogs.newOrExisting]",
			"storageAccountForLogsExistingRG": "[steps('vmSettings').storageAccountForLogs.resourceGroup]",

			"publicIPAddressName": "[steps('vmSettings').dnsAndPublicIP.name]",
			"publicIPDnsName": "[steps('vmSettings').dnsAndPublicIP.domainNameLabel]",
			"publicIPNewOrExistingOrNone": "[steps('vmSettings').dnsAndPublicIP.newOrExistingOrNone]",
			"publicIPExistingRGName": "[steps('vmSettings').dnsAndPublicIP.resourceGroup]"
		}
	}
}